{"remainingRequest":"/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js??ref--3-0!/home/ubuntu/repos/Sage-docs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/ubuntu/repos/Sage-docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/ubuntu/repos/Sage-docs/docs/tools.md?vue&type=template&id=7ae1be8c","dependencies":[{"path":"/home/ubuntu/repos/Sage-docs/docs/tools.md","mtime":1735064940863},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js","mtime":1735064969903},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js","mtime":1735064969903},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/babel-loader/lib/index.js","mtime":1735064969995},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1735064970523},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js","mtime":1735064969903},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/index.js","mtime":1735064970175},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1735064969259}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}