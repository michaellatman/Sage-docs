{"remainingRequest":"/home/ubuntu/repos/Sage-docs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/ubuntu/repos/Sage-docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/ubuntu/repos/Sage-docs/docs/usage.md?vue&type=template&id=84aaf916","dependencies":[{"path":"/home/ubuntu/repos/Sage-docs/docs/usage.md","mtime":1735064866303},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js","mtime":1735064969903},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js","mtime":1735064969903},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/babel-loader/lib/index.js","mtime":1735064969995},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1735064970523},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/cache-loader/dist/cjs.js","mtime":1735064969903},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/vue-loader/lib/index.js","mtime":1735064970175},{"path":"/home/ubuntu/repos/Sage-docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1735064969259}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jOwogIHJldHVybiBfYygnQ29udGVudFNsb3RzRGlzdHJpYnV0b3InLCB7CiAgICBhdHRyczogewogICAgICAic2xvdC1rZXkiOiBfdm0uJHBhcmVudC5zbG90S2V5CiAgICB9CiAgfSwgW19jKCdoMScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJ1c2luZy1zYWdlIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjdXNpbmctc2FnZSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgVXNpbmcgU2FnZSIpXSksIF92bS5fdigiICIpLCBfYygnaDInLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAiY2hhdC1pbnRlcmZhY2UiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNjaGF0LWludGVyZmFjZSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgQ2hhdCBJbnRlcmZhY2UiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInN0YXJ0aW5nLWEtY29udmVyc2F0aW9uIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjc3RhcnRpbmctYS1jb252ZXJzYXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFN0YXJ0aW5nIGEgQ29udmVyc2F0aW9uIildKSwgX3ZtLl92KCIgIiksIF9jKCdvbCcsIFtfYygnbGknLCBbX3ZtLl92KCJDbGljayB0aGUgbmV3IGNoYXQgYnV0dG9uIildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIlR5cGUgeW91ciBtZXNzYWdlIGluIHRoZSBpbnB1dCBmaWVsZCIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJQcmVzcyBFbnRlciBvciBjbGljayB0aGUgc2VuZCBidXR0b24iKV0pXSksIF92bS5fdigiICIpLCBfYygnaDMnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAibWFuYWdpbmctbWVzc2FnZXMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNtYW5hZ2luZy1tZXNzYWdlcyIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgTWFuYWdpbmcgTWVzc2FnZXMiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3VsJywgW19jKCdsaScsIFtfYygnc3Ryb25nJywgW192bS5fdigiQ29weSBSZXNwb25zZXMiKV0pLCBfdm0uX3YoIjogVXNlIHRoZSBjb3B5IGJ1dHRvbiBiZW5lYXRoIGVhY2ggbWVzc2FnZSIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX2MoJ3N0cm9uZycsIFtfdm0uX3YoIlNlbGVjdCBUZXh0IildKSwgX3ZtLl92KCI6IExvbmcgcHJlc3Mgb24gYW55IG1lc3NhZ2UgdG8gc2VsZWN0IHNwZWNpZmljIHRleHQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW19jKCdzdHJvbmcnLCBbX3ZtLl92KCJTaGFyZSBDb250ZW50IildKSwgX3ZtLl92KCI6IFVzZSB0aGUgc2hhcmUgYnV0dG9uIGZvciBtZXNzYWdlcyBvciBhcnRpZmFjdHMiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW19jKCdzdHJvbmcnLCBbX3ZtLl92KCJTY3JvbGwgV2hpbGUgUmVhZGluZyIpXSksIF92bS5fdigiOiBDb250aW51ZSByZWFkaW5nIHByZXZpb3VzIG1lc3NhZ2VzIHdoaWxlIHRoZSBBSSBpcyByZXNwb25kaW5nIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImF0dGFjaG1lbnRzIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjYXR0YWNobWVudHMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIEF0dGFjaG1lbnRzIildKSwgX3ZtLl92KCIgIiksIF9jKCd1bCcsIFtfYygnbGknLCBbX3ZtLl92KCJEcmFnIGFuZCBkcm9wIGltYWdlcyBkaXJlY3RseSBpbnRvIHRoZSBjaGF0IildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIlVzZSB0aGUgYXR0YWNobWVudCBidXR0b24gZm9yIGZpbGUgdXBsb2FkcyIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJTdXBwb3J0ZWQgZmlsZSB0eXBlcyBpbmNsdWRlIGltYWdlcyBhbmQgZG9jdW1lbnRzIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIndvcmtpbmctd2l0aC1hcnRpZmFjdHMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiN3b3JraW5nLXdpdGgtYXJ0aWZhY3RzIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBXb3JraW5nIHdpdGggQXJ0aWZhY3RzIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiQXJ0aWZhY3RzIGFyZSBzcGVjaWFsIHJlc3BvbnNlcyBmcm9tIFNhZ2UgdGhhdCBjYW4gY29udGFpbiByaWNoIGNvbnRlbnQgbGlrZSBjb2RlLCB0YWJsZXMsIG9yIGZvcm1hdHRlZCB0ZXh0LiIpXSksIF92bS5fdigiICIpLCBfYygnaDMnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAidmlld2luZy1hcnRpZmFjdHMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiN2aWV3aW5nLWFydGlmYWN0cyIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgVmlld2luZyBBcnRpZmFjdHMiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3VsJywgW19jKCdsaScsIFtfdm0uX3YoIkNsaWNrIG9uIGFuIGFydGlmYWN0IHRvIG9wZW4gaXQgaW4gdGhlIHZpZXdlciIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJTd2l0Y2ggYmV0d2VlbiBwcmV2aWV3IGFuZCBjb2RlIHZpZXdzIildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIlVzZSB0aGUgc2hhcmUgYnV0dG9uIHRvIGV4cG9ydCBhcnRpZmFjdHMiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiSGFwdGljIGZlZWRiYWNrIGluZGljYXRlcyB3aGVuIGFuIGFydGlmYWN0IGlzIHJlYWR5IildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImlwYWQtc3BsaXQtdmlldyIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI2lwYWQtc3BsaXQtdmlldyIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgaVBhZCBTcGxpdCBWaWV3IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiT24gaVBhZCwgYXJ0aWZhY3RzIG9wZW4gaW4gYSBzcGxpdCB2aWV3IGZvcjoiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3VsJywgW19jKCdsaScsIFtfdm0uX3YoIlNpZGUtYnktc2lkZSB2aWV3aW5nIHdpdGggdGhlIGNoYXQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiRWFzeSByZWZlcmVuY2Ugd2hpbGUgY29udGludWluZyBjb252ZXJzYXRpb24iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiRW5oYW5jZWQgcHJvZHVjdGl2aXR5IHdvcmtmbG93IildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIm9yZ2FuaXphdGlvbiIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI29yZ2FuaXphdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgT3JnYW5pemF0aW9uIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJjaGF0LW1hbmFnZW1lbnQiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNjaGF0LW1hbmFnZW1lbnQiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIENoYXQgTWFuYWdlbWVudCIpXSksIF92bS5fdigiICIpLCBfYygndWwnLCBbX2MoJ2xpJywgW19jKCdzdHJvbmcnLCBbX3ZtLl92KCJQaW4gSW1wb3J0YW50IENoYXRzIildKSwgX3ZtLl92KCI6IFVzZSDijJgg4oenIFAgb3IgdGhlIGNvbnRleHQgbWVudSIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX2MoJ3N0cm9uZycsIFtfdm0uX3YoIkF1dG9tYXRpYyBUaXRsZXMiKV0pLCBfdm0uX3YoIjogQ2hhdHMgYXJlIHRpdGxlZCBiYXNlZCBvbiB0aGUgZmlyc3QgbWVzc2FnZSIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX2MoJ3N0cm9uZycsIFtfdm0uX3YoIlNlY3Rpb25zIildKSwgX3ZtLl92KCI6IE9yZ2FuaXplIGNoYXRzIGluIGNvbGxhcHNpYmxlIHNlY3Rpb25zIildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfYygnc3Ryb25nJywgW192bS5fdigiUXVpY2sgTmF2aWdhdGlvbiIpXSksIF92bS5fdigiOiBVc2UgdGhlIHNjcm9sbCB0byBib3R0b20gYnV0dG9uIHdoZW4gbmVlZGVkIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInBlcmZvcm1hbmNlLWZlYXR1cmVzIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjcGVyZm9ybWFuY2UtZmVhdHVyZXMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFBlcmZvcm1hbmNlIEZlYXR1cmVzIildKSwgX3ZtLl92KCIgIiksIF9jKCd1bCcsIFtfYygnbGknLCBbX3ZtLl92KCJTbW9vdGggc2Nyb2xsaW5nIGR1cmluZyByZXNwb25zZXMiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiRmFzdCBzaWRlYmFyIG5hdmlnYXRpb24iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiUmVzcG9uc2l2ZSBhcnRpZmFjdCByZW5kZXJpbmciKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiRWZmaWNpZW50IGNoYXQgaGlzdG9yeSBsb2FkaW5nIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIm5leHQtc3RlcHMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNuZXh0LXN0ZXBzIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBOZXh0IFN0ZXBzIildKSwgX3ZtLl92KCIgIiksIF9jKCd1bCcsIFtfYygnbGknLCBbX3ZtLl92KCJMZWFybiBhYm91dCBhdmFpbGFibGUgIiksIF9jKCdSb3V0ZXJMaW5rJywgewogICAgYXR0cnM6IHsKICAgICAgInRvIjogIi90b29scy5odG1sIgogICAgfQogIH0sIFtfdm0uX3YoIlRvb2xzIildKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiQ2hlY2sgdGhlICIpLCBfYygnUm91dGVyTGluaycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ0byI6ICIvZmFxLmh0bWwiCiAgICB9CiAgfSwgW192bS5fdigiRkFRIildKSwgX3ZtLl92KCIgZm9yIHRyb3VibGVzaG9vdGluZyIpXSwgMSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJFeHBsb3JlIGFkdmFuY2VkIGZlYXR1cmVzIGluIGVhY2ggdG9vbCdzIGRvY3VtZW50YXRpb24iKV0pXSldKTsKfTsKdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdOwpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Ow=="},null]}